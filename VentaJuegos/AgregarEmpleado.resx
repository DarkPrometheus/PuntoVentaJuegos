<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        c+QfHoP78QAAAABJRU5ErkJggg==
</value>
  </data>
</root>